<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>猫大叔</title>
  
  <subtitle>关注前端，热爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://21ido.com/"/>
  <updated>2018-08-09T16:30:15.961Z</updated>
  <id>http://21ido.com/</id>
  
  <author>
    <name>猫大叔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Promise入门指南(5)</title>
    <link href="http://21ido.com/2018/08/33ad2a19/"/>
    <id>http://21ido.com/2018/08/33ad2a19/</id>
    <published>2018-08-09T16:26:24.000Z</published>
    <updated>2018-08-09T16:30:15.961Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Promise-catch&quot;&gt;&lt;a href=&quot;#Promise-catch&quot; class=&quot;headerlink&quot; title=&quot;Promise.catch&quot;&gt;&lt;/a&gt;Promise.catch&lt;/h3&gt;&lt;p&gt;&lt;code&gt;catch&lt;/code&gt; 是用来捕获异常的，但是网上很多教程代码把 &lt;code&gt;catch&lt;/code&gt; 当 &lt;code&gt;rejected&lt;/code&gt; 使用，这是不当的&lt;/p&gt;
&lt;p&gt;前面说了 Promise 有3种状态， pending, fulffilled, rejected&lt;br&gt;并没有一种状态叫异常，实际使用中，能确定的状态用 resolve / reject 来回调，而不是丢到 catch&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 错误示例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// try something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;something error&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;p2&#39;&lt;/span&gt;, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;p3&#39;&lt;/span&gt;, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样当报错时，会抛到 catch 去执行，而实际有些错误是可预见的，所以当可预见和不可预见的错误，都往 catch 报的时候，就没法判断了，因此建议用 reject 来处理可预见性的错误&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="promise" scheme="http://21ido.com/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>Promise入门指南(4)</title>
    <link href="http://21ido.com/2018/07/2ab61b58/"/>
    <id>http://21ido.com/2018/07/2ab61b58/</id>
    <published>2018-07-21T15:25:12.000Z</published>
    <updated>2018-08-05T15:51:22.583Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Promise-all&quot;&gt;&lt;a href=&quot;#Promise-all&quot; class=&quot;headerlink&quot; title=&quot;Promise.all&quot;&gt;&lt;/a&gt;Promise.all&lt;/h3&gt;&lt;p&gt;有一些场景，需要同时调用几个接口，拿到全部返回数据，才能接着往下调用&lt;br&gt;以往遇到这种情况，需要设置一些临时变量来记录每个接口是否返回数据，每次返回时再判断是否数据已经齐全，再往下接着走&lt;br&gt;而 all 方法就是为此而生的，接受参数为 Promise对象数组&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; pArr = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pArr.push(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;p1 resolve&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resolve(&lt;span class=&quot;string&quot;&gt;&quot;resp1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pArr.push(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;p2 resolve&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resolve(&lt;span class=&quot;string&quot;&gt;&quot;resp2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pArr.push(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;p3 resolve&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resolve(&lt;span class=&quot;string&quot;&gt;&quot;resp3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all(pArr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resp&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;all is done, doing next&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; p1 resolve&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; p3 resolve&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; p2 resolve&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// =&amp;gt; all is done, doing next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="promise" scheme="http://21ido.com/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>Promise入门指南(3)</title>
    <link href="http://21ido.com/2018/07/65f78d9f/"/>
    <id>http://21ido.com/2018/07/65f78d9f/</id>
    <published>2018-07-15T10:44:55.000Z</published>
    <updated>2018-08-05T15:51:12.202Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Promise是JavaScript异步编程解决方案，之一&lt;br&gt;以往我们所习惯的回调函数也是之一，还有事件监听和观察者模式（也叫发布订阅模式）也算&lt;br&gt;而Promise是遵循的是Promise/A+规范，像Axios也是遵循这个规范，提供了相同的api&lt;/p&gt;
&lt;p&gt;Promise/A+规范解决了回调函数的一些弊端，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码书写逻辑&lt;/li&gt;
&lt;li&gt;更改回调顺序的噩梦&lt;/li&gt;
&lt;li&gt;多步回调的魔鬼嵌套&lt;/li&gt;
&lt;li&gt;回调函数的跟踪&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但Promise也不是万能的，作为解决方案之一，并不是适合所有的异步场景&lt;/p&gt;
&lt;p&gt;前面说到Promise特征之一就是状态一旦变成 fulfilled 或是 rejected ，则不会再改变，而当执行 then 进行 resolve 和 rejected 回调注册时，返回的其实是一个新的Promise对象&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setTimeout( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resolve(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().getTime());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.dir(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.dir(p.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;v&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().getTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="promise" scheme="http://21ido.com/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>Promise入门指南(2)</title>
    <link href="http://21ido.com/2018/07/7cecbcde/"/>
    <id>http://21ido.com/2018/07/7cecbcde/</id>
    <published>2018-07-13T10:01:16.000Z</published>
    <updated>2018-08-05T15:51:01.188Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;finished&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve(&lt;span class=&quot;string&quot;&gt;&#39;someone&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前面提到的这种写法，实际不会这么直接把Promise赋值给p，因为大部分function调用需要传入参数，所以习惯在function里面new Promise示例并return&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; getUrl = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;param&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.ajax(url, response =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            resolve(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getUrl(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;response&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是比较标准的写法，还有比较偷懒的写法&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="promise" scheme="http://21ido.com/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>Promise入门指南(1)</title>
    <link href="http://21ido.com/2018/06/57c1ef1d/"/>
    <id>http://21ido.com/2018/06/57c1ef1d/</id>
    <published>2018-06-04T06:48:28.000Z</published>
    <updated>2018-08-05T15:50:28.783Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Promise是异步编程的解决方案&quot;&gt;&lt;a href=&quot;#Promise是异步编程的解决方案&quot; class=&quot;headerlink&quot; title=&quot;Promise是异步编程的解决方案&quot;&gt;&lt;/a&gt;Promise是异步编程的解决方案&lt;/h3&gt;&lt;p&gt;Promise有3种状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pending&lt;/li&gt;
&lt;li&gt;fulfilled&lt;/li&gt;
&lt;li&gt;rejected&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对象的状态是不受外界影响的，而且状态的改变只有两种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;pending -&amp;gt; fulfilled&lt;/li&gt;
&lt;li&gt;pending -&amp;gt; rejected&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一旦变成fulfilled或rejected，则终止，不会再改变&lt;br&gt;而在pending阶段，是不能取消，即一旦开始执行，就只能等状态改变，无法中途取消操作&lt;/p&gt;
&lt;h3 id=&quot;代码示例&quot;&gt;&lt;a href=&quot;#代码示例&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;finished&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve(&lt;span class=&quot;string&quot;&gt;&#39;someone&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="promise" scheme="http://21ido.com/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript学习笔记(2)</title>
    <link href="http://21ido.com/2018/05/383e290e/"/>
    <id>http://21ido.com/2018/05/383e290e/</id>
    <published>2018-05-16T08:29:33.000Z</published>
    <updated>2018-08-06T09:45:52.330Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;h4 id=&quot;表示法&quot;&gt;&lt;a href=&quot;#表示法&quot; class=&quot;headerlink&quot; title=&quot;[]表示法&quot;&gt;&lt;/a&gt;[]表示法&lt;/h4&gt;&lt;p&gt;在类型定义后面加上[]即表示数组&lt;br&gt;定义的数组不允许出现其它类型，同时支持联合类型&lt;br&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catArr: &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;[] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catName: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;[] = [&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;tow&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catColor: (&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;|&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;)[] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;tow&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0xFFF&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catColor.push(&lt;span class=&quot;string&quot;&gt;&quot;four&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;泛型表示法&quot;&gt;&lt;a href=&quot;#泛型表示法&quot; class=&quot;headerlink&quot; title=&quot;泛型表示法&quot;&gt;&lt;/a&gt;泛型表示法&lt;/h4&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catArr: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;&amp;gt; = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catName: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; = [&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;tow&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; catColor: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt;|&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;&amp;gt; = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catColor.push(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="typescript" scheme="http://21ido.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript学习笔记(1)</title>
    <link href="http://21ido.com/2018/05/1f5ada0a/"/>
    <id>http://21ido.com/2018/05/1f5ada0a/</id>
    <published>2018-05-14T03:44:00.000Z</published>
    <updated>2018-08-06T09:45:39.770Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/xcatliu/typescript-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《TypeScript入门教程》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;TypeScript是什么&quot;&gt;&lt;a href=&quot;#TypeScript是什么&quot; class=&quot;headerlink&quot; title=&quot;TypeScript是什么&quot;&gt;&lt;/a&gt;TypeScript是什么&lt;/h2&gt;&lt;p&gt;是JavaScript的超集&lt;br&gt;安装nodejs后执行&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i -g typescript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;TypeScript是后缀名为ts的文本文件，编译ts命令为&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tsc hello.ts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就会生成对应js文件&lt;/p&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h2&gt;&lt;h3 id=&quot;原始数据类型&quot;&gt;&lt;a href=&quot;#原始数据类型&quot; class=&quot;headerlink&quot; title=&quot;原始数据类型&quot;&gt;&lt;/a&gt;原始数据类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;布尔值  &lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; isCat: &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="typescript" scheme="http://21ido.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket入门（3）心跳检测</title>
    <link href="http://21ido.com/2018/05/30381c3b/"/>
    <id>http://21ido.com/2018/05/30381c3b/</id>
    <published>2018-05-11T02:41:26.000Z</published>
    <updated>2018-08-06T09:47:32.901Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;websocket自带onerror回调，当异常会触发，但是在目前阶段，某些时候浏览器并不会触发，包括chrome，直接close&lt;br&gt;最好就是加一个心跳检测来判断网络异常&lt;br&gt;websocket有一个readyState状态值，代表的状态如下（摘自&lt;a href=&quot;http://www.ruanyifeng.com/blog/2017/05/websocket.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阮一峰博客&lt;/a&gt;）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CONNECTING：值为0，表示正在连接&lt;/li&gt;
&lt;li&gt;OPEN：值为1，表示连接成功，可以通信了&lt;/li&gt;
&lt;li&gt;CLOSING：值为2，表示连接正在关闭&lt;/li&gt;
&lt;li&gt;CLOSED：值为3，表示连接已经关闭，或者打开连接失败&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当成功建立连接后，即启动心跳检测，大概的流程如下图&lt;br&gt;&lt;img src=&quot;/images/2018/05/websocket_heart.png&quot; alt=&quot;flow&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="http" scheme="http://21ido.com/tags/http/"/>
    
      <category term="socket" scheme="http://21ido.com/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket入门（2）API使用</title>
    <link href="http://21ido.com/2018/03/8e1b4ab/"/>
    <id>http://21ido.com/2018/03/8e1b4ab/</id>
    <published>2018-03-30T09:19:47.000Z</published>
    <updated>2018-08-06T09:46:58.068Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Websocket有2种URI格式，ws:// 和 wss://，端口分别为80和443，类似 http:// 和 https://&lt;/p&gt;
&lt;p&gt;看个demo&lt;/p&gt;
&lt;p&gt;↓↓↓ 客户端 ↓↓↓&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;WebSocket&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; showLog = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; dom = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; tmp = dom.innerHTML;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	tmp = str + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br /&amp;gt;&quot;&lt;/span&gt; + tmp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;	dom.innerHTML = tmp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ws = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebSocket(&lt;span class=&quot;string&quot;&gt;&#39;ws://localhost:8080&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;ws.onopen = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;ws onopen&#39;&lt;/span&gt;, event);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	ws.send(&lt;span class=&quot;string&quot;&gt;&#39;from client: hello&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;ws.onmessage = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;ws onmessage&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;from server: &#39;&lt;/span&gt;, event);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;	showLog(event.data);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;ws.onclose = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;close&quot;&lt;/span&gt;, event);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;ws.onerror = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;, event);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="http" scheme="http://21ido.com/tags/http/"/>
    
      <category term="socket" scheme="http://21ido.com/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket入门（1）TCP基础</title>
    <link href="http://21ido.com/2018/02/83090531/"/>
    <id>http://21ido.com/2018/02/83090531/</id>
    <published>2018-02-26T10:18:15.000Z</published>
    <updated>2018-08-06T09:46:51.237Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;WebSocket是html5的产物，跟socket相似，但是前期通讯是基于http，而http又是基于TCP&lt;br&gt;先说下TCP的三次握手&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/02/tcp3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;翻译成人话就是这样&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;客户端：老哥你在吗&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务端：老弟找我啥事&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;服务端：太好了是这样的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后传输开始巴拉巴拉巴拉&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="IT" scheme="http://21ido.com/categories/IT/"/>
    
    
      <category term="http" scheme="http://21ido.com/tags/http/"/>
    
      <category term="socket" scheme="http://21ido.com/tags/socket/"/>
    
      <category term="tcp" scheme="http://21ido.com/tags/tcp/"/>
    
  </entry>
  
  <entry>
    <title>javascript事件委托</title>
    <link href="http://21ido.com/2018/01/c1495b93/"/>
    <id>http://21ido.com/2018/01/c1495b93/</id>
    <published>2018-01-17T09:43:52.000Z</published>
    <updated>2018-08-11T09:24:07.900Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本例代码在&lt;a href=&quot;https://github.com/think2cat/practice/tree/master/delegate&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;事件委托简单来说，就是触发事件的DOM元素本身不执行绑定的事件，而是交给父元素或上上级甚至根元素去处理&lt;/p&gt;
&lt;p&gt;先看个例子&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;AA &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;A1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;A2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;BB &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;B1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;B2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;CC &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;C1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;C2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;DD &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;D1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;D2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;EE &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;E1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;E2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;FF &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;F1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;F2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="delegate" scheme="http://21ido.com/tags/delegate/"/>
    
  </entry>
  
  <entry>
    <title>jsPlumb学习笔记（2）</title>
    <link href="http://21ido.com/2018/01/c1587beb/"/>
    <id>http://21ido.com/2018/01/c1587beb/</id>
    <published>2018-01-10T09:11:38.000Z</published>
    <updated>2018-08-02T07:31:19.604Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;完成元素拖动后，接着做连线，连线由几部分组成&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Endpoint 端点，默认为圆点&lt;/li&gt;
&lt;li&gt;Connector 连接线，默认为贝塞尔曲线&lt;/li&gt;
&lt;li&gt;Anchor 锚点，不可见元素，跟Endpoint是绑定的，在动态创建连接线时使用&lt;/li&gt;
&lt;li&gt;Overlay 覆盖物，如连线上的箭头，也可以是文字或dom元素&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当容器append了一个dom后，调用addEndpoint来增加输出和输入端点，该函数接受3个参数，分别是dom，参数以及附加参数&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="jsPlumb" scheme="http://21ido.com/tags/jsPlumb/"/>
    
  </entry>
  
  <entry>
    <title>jsPlumb学习笔记（1）</title>
    <link href="http://21ido.com/2018/01/d3edd405/"/>
    <id>http://21ido.com/2018/01/d3edd405/</id>
    <published>2018-01-02T09:13:29.000Z</published>
    <updated>2018-08-02T07:31:16.332Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;jsPlumb是一个DOM连线JS库，采用SVG绘制连线&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jsplumbtoolkit.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt; | &lt;a href=&quot;https://github.com/jsplumb/jsplumb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://jsplumbtoolkit.com/docs.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是前阵子做的DEMO，用来操作沙盘演示用，做得比较粗糙&lt;/p&gt;
&lt;p&gt;本文代码均放&lt;a href=&quot;https://github.com/think2cat/jsplumb_demo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;，另外学习中参考了网上其他大牛，特别感谢这二位&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/techborther/archive/2012/04/17/2454101.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;【看完想不会都难的系列教程】- (3) JQuery+JQueryUI+Jsplumb 实现拖拽模块，流程图风格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://qkxue.net/info/182575/jsPlumb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jsPlumb的简单使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/01/js2.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="jsPlumb" scheme="http://21ido.com/tags/jsPlumb/"/>
    
  </entry>
  
  <entry>
    <title>UEFI启动那些事</title>
    <link href="http://21ido.com/2017/12/7a24af62/"/>
    <id>http://21ido.com/2017/12/7a24af62/</id>
    <published>2017-12-11T09:35:58.000Z</published>
    <updated>2018-08-06T09:46:07.437Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;UEFI早在大概05年就推出1.1版了，但是一直没有推广开，直到win7开始支持&lt;br&gt;我作为一个守旧派不大愿意接受新硬件，也一直坚守Legacy BIOS启动方式（下面简称BIOS）&lt;/p&gt;
&lt;p&gt;但是最近换了新电脑，自带WIn10，格掉后重新分区，Ghost了一版Win10后发现无法启动，主板设置居然连硬盘启动都消失了，折腾半天无果，才不得已看了恶补了一下知识&lt;br&gt;关于BIOS启动和UEFI启动可以看这篇豆芽文&lt;br&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Unified Extensible Firmware Interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单来说，BIOS启动后从硬盘MBR引导扇区（Master Boot Record）加载引导信息，而UEFI是从\ESP分区加载引导信息，这又涉及到MBR分区表和GPT分区表&lt;br&gt;
    
    </summary>
    
      <category term="IT" scheme="http://21ido.com/categories/IT/"/>
    
    
      <category term="BIOS" scheme="http://21ido.com/tags/BIOS/"/>
    
      <category term="ESP" scheme="http://21ido.com/tags/ESP/"/>
    
      <category term="MSR" scheme="http://21ido.com/tags/MSR/"/>
    
      <category term="UEFI" scheme="http://21ido.com/tags/UEFI/"/>
    
      <category term="WIN10" scheme="http://21ido.com/tags/WIN10/"/>
    
  </entry>
  
  <entry>
    <title>ShadowSocks PAC过滤规则说明</title>
    <link href="http://21ido.com/2017/12/7868958c/"/>
    <id>http://21ido.com/2017/12/7868958c/</id>
    <published>2017-12-07T06:48:48.000Z</published>
    <updated>2018-08-05T16:09:16.253Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;SS小飞机文件夹有个pac.txt，打开会发现是一个JS格式的文件，这就是自动代理配置文件&lt;br&gt;PAC全称Proxy Auto Config File，用于根据URL选择不同代理服务器或是不代理直接访问，相比于传统代理可以加快速度，也减少代理服务器的流量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/12/pac.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="PAC" scheme="http://21ido.com/tags/PAC/"/>
    
      <category term="ShadowSocks" scheme="http://21ido.com/tags/ShadowSocks/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli下解决跨域sessionid问题</title>
    <link href="http://21ido.com/2017/09/33570702/"/>
    <id>http://21ido.com/2017/09/33570702/</id>
    <published>2017-09-12T15:31:00.000Z</published>
    <updated>2018-08-06T09:46:40.683Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2017/09/sessionid.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;项目开始为了方便直接把页面包在Java容器里面，而实际设计应该是前后端分离的&lt;br&gt;最近在做分离时api请求发现，因为前端web和后端portal不在一个容器，存在跨域，会造成每次ajax请求都生成不同sessionid，而portal是通过session来识别用户，从而控制权限，这将导致登录后依旧无法获取数据，因为sessionid变了，portal认为没有权限并302重定向到首页&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="node.js" scheme="http://21ido.com/tags/node-js/"/>
    
      <category term="vue" scheme="http://21ido.com/tags/vue/"/>
    
      <category term="vue-cli" scheme="http://21ido.com/tags/vue-cli/"/>
    
  </entry>
  
  <entry>
    <title>Bower学习笔记</title>
    <link href="http://21ido.com/2017/08/cf44a887/"/>
    <id>http://21ido.com/2017/08/cf44a887/</id>
    <published>2017-08-21T07:17:19.000Z</published>
    <updated>2018-08-01T07:20:45.186Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2017/08/bower.png&quot; alt=&quot;bower&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-bower是什么&quot;&gt;&lt;a href=&quot;#1-bower是什么&quot; class=&quot;headerlink&quot; title=&quot;1. bower是什么&quot;&gt;&lt;/a&gt;1. bower是什么&lt;/h4&gt;&lt;p&gt;bower是基于node.js的包管理工具，可以方便的安装和卸载web开发资源，诸如jQuery、bootstrap之类&lt;br&gt;而像yeoman和grunt则是在bower基础上的开发工具&lt;/p&gt;
&lt;h4 id=&quot;2-bower和npm的区别&quot;&gt;&lt;a href=&quot;#2-bower和npm的区别&quot; class=&quot;headerlink&quot; title=&quot;2. bower和npm的区别&quot;&gt;&lt;/a&gt;2. bower和npm的区别&lt;/h4&gt;&lt;p&gt;都是包管理工具，但是bower是for web，npm的包依赖是一种独特的嵌套依赖关系树，依赖包层层嵌套树杈非常坑长，打开node_modules可以看到里面密密麻麻的包，但对于前端库来说，这些基本是多余的，往往需要的只是一个未压缩或者压缩后的js和css而已，而bower正是管理js/css/模板的一个工具&lt;br&gt;&lt;a href=&quot;https://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Stack上有相关评论点这里&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="bower" scheme="http://21ido.com/tags/bower/"/>
    
      <category term="nodejs" scheme="http://21ido.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Flex布局学习笔记</title>
    <link href="http://21ido.com/2017/08/d15bd75e/"/>
    <id>http://21ido.com/2017/08/d15bd75e/</id>
    <published>2017-08-18T08:47:05.000Z</published>
    <updated>2018-08-02T02:59:20.106Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阮大的教程&lt;/a&gt; | &lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/07/flex-examples.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;实战篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Coffcer/flex-layout&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Flex布局的开源库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSS传统布局基于盒子模型，依靠display + position + float属性进行定位，在一些特殊布局显得不灵活&lt;/p&gt;
&lt;p&gt;Flex布局，容器内的元素自动成为flex item，容器基于XY轴进行布局&lt;/p&gt;
&lt;p&gt;其容器属性有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-direction X主轴排列方向&lt;/li&gt;
&lt;li&gt;flex-wrap 元素换行&lt;/li&gt;
&lt;li&gt;flex-flow 上面2个的简写&lt;/li&gt;
&lt;li&gt;justify-content 主轴对齐方式&lt;/li&gt;
&lt;li&gt;align-items Y轴对齐方式&lt;/li&gt;
&lt;li&gt;align-content 多轴线对齐方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;item属性有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;order 排列顺序&lt;/li&gt;
&lt;li&gt;flex-grow 剩余空间膨胀值&lt;/li&gt;
&lt;li&gt;flex-shrink 空间不足缩小值&lt;/li&gt;
&lt;li&gt;flex-basis 预分配大小值&lt;/li&gt;
&lt;li&gt;flex 以上3个的简写&lt;/li&gt;
&lt;li&gt;align-self 对齐方式
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="flex" scheme="http://21ido.com/tags/flex/"/>
    
      <category term="css" scheme="http://21ido.com/tags/css/"/>
    
      <category term="html" scheme="http://21ido.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>ES6箭头函数</title>
    <link href="http://21ido.com/2017/06/5b0ab7b9/"/>
    <id>http://21ido.com/2017/06/5b0ab7b9/</id>
    <published>2017-06-09T16:31:48.000Z</published>
    <updated>2018-08-01T07:22:05.003Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第一次见到这箭头=&amp;gt;，我觉得这是很奇葩的写法，因为作为一个老男人来说，会影响阅读和理解代码的速度=_=||&lt;/p&gt;
&lt;p&gt;作为ES6新特性之一，箭头函数特点如下&lt;/p&gt;
&lt;p&gt;a）简洁&lt;br&gt;b）this指向&lt;br&gt;c）rest取代arguments&lt;/p&gt;
&lt;h4 id=&quot;1-简洁&quot;&gt;&lt;a href=&quot;#1-简洁&quot; class=&quot;headerlink&quot; title=&quot;1. 简洁&quot;&gt;&lt;/a&gt;1. 简洁&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; showTips = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;d&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#Tip&quot;&lt;/span&gt;).text(d).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码换成箭头写法是这样&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; showTips = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;d&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;$(&lt;span class=&quot;string&quot;&gt;&quot;#Tip&quot;&lt;/span&gt;).text(d).show()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="ES6" scheme="http://21ido.com/tags/ES6/"/>
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>grunt入门笔记（1）</title>
    <link href="http://21ido.com/2017/05/b722d741/"/>
    <id>http://21ido.com/2017/05/b722d741/</id>
    <published>2017-05-14T16:14:47.000Z</published>
    <updated>2018-08-02T07:09:26.939Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2017/05/gruntjs.jpg&quot; alt=&quot;grunt.js&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h4&gt;&lt;p&gt;grunt依赖node.js，需要先安装node.js，官网&lt;a href=&quot;https://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/&lt;/a&gt;&lt;br&gt;安装后敲node -v会打印版本号，则安装成功&lt;br&gt;接着安装grunt， -g表示全局，不带则安装到当前目录&lt;br&gt;npm install -g grunt-cli&lt;/p&gt;
&lt;h4 id=&quot;2-初始化package-json&quot;&gt;&lt;a href=&quot;#2-初始化package-json&quot; class=&quot;headerlink&quot; title=&quot;2. 初始化package.json&quot;&gt;&lt;/a&gt;2. 初始化package.json&lt;/h4&gt;&lt;p&gt;package.json是node.js项目描述文件，在项目根目录下执行&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://21ido.com/categories/Web/"/>
    
    
      <category term="nodejs" scheme="http://21ido.com/tags/nodejs/"/>
    
      <category term="javascript" scheme="http://21ido.com/tags/javascript/"/>
    
      <category term="grunt" scheme="http://21ido.com/tags/grunt/"/>
    
  </entry>
  
</feed>
